{"version":3,"sources":["components/TodoItem/TodoItem.tsx","components/AddTodoPanel/AddTodoPanel.tsx","components/SearchPanel/SearchPanel.tsx","components/ConfirmModal/ConfirmModal.tsx","components/TodoList/TodoList.tsx","components/App/App.tsx","index.tsx"],"names":["TodoItem","todo","passId","openModal","handleTodoClick","className","onClick","id","isDone","name","AddTodoPanel","inputValue","handleKeyUp","handleSubmit","handleChange","onChange","value","type","onKeyUp","placeholder","disabled","SearchPanel","searchInputValue","handleSearchInputChange","searchTodo","ConfirmModal","removeTodo","closeModal","console","log","TodoList","useState","todoList","setTodoList","setInputValue","setSearchInputValue","isModalVisible","setIsModalVisible","currentTodoId","setCurrentTodoId","useCallback","currentTodo","find","index","findIndex","prevState","slice","renderTodoList","todos","map","key","renderFilteredTodoList","filtered","filter","toLowerCase","includes","Date","valueOf","Fragment","e","preventDefault","target","currentTarget","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edb85688.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport { TodoItemProps } from '../../types'\r\nimport './TodoItem.scss'\r\n\r\nexport default function TodoItem({todo, passId, openModal, handleTodoClick}: TodoItemProps, ) {\r\n    return (\r\n        <div className=\"todoItem\">\r\n            <div className=\"todoItem__inner\">\r\n                <p onClick={() => handleTodoClick(todo.id)} className={todo.isDone ? 'todoItem__text__done' : 'todoItem__text'}>{todo.name}</p>\r\n                {todo.isDone ? <button className=\"todoItem__button\" onClick={() => {openModal(); passId(todo.id)}}>Delete</button> : '' }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { AddTodoPanelProps } from '../../types'\r\nimport './AddTodoPanel.scss'\r\n\r\n\r\nexport default function AddTodoPanel({inputValue, handleKeyUp, handleSubmit, handleChange}: AddTodoPanelProps) {\r\n    return (\r\n        <div className=\"addTodoPanel\">\r\n            <input className=\"addTodoPanel__input\" onChange={handleChange} value={inputValue} type=\"text\" onKeyUp={handleKeyUp} \r\n                placeholder='Enter task and press \"Add Task\" Button'/>\r\n            <button className=\"addTodoPanel__button\" disabled={inputValue ? false : true} onClick={() => handleSubmit()}>\r\n                Add Task!\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {SearchPanelInterface} from '../../types'\r\nimport './SearchPanel.scss'\r\n\r\nexport default function SearchPanel({searchInputValue, handleSearchInputChange, searchTodo}: SearchPanelInterface) {\r\n    return (\r\n        <div className=\"searchPanel\">\r\n            <input \r\n            className=\"searchPanel__input\" \r\n            onChange={handleSearchInputChange} \r\n            value={searchInputValue} \r\n            onKeyUp={searchTodo} \r\n            placeholder=\"Enter task name for search...\"\r\n            type=\"text\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { ConfirmModalInterface } from '../../types'\r\nimport './ConfirmModal.scss'\r\n\r\nexport default function ConfirmModal({id, removeTodo, closeModal}: ConfirmModalInterface) {\r\n    return (\r\n        <div className=\"confirmModal\">\r\n            <div className=\"confirmModal__question\">\r\n                <p>Are you sure you want to delete this ToDo item?</p>\r\n            </div>\r\n            <div className=\"confirmModal__buttons\">\r\n                <button className=\"confirmModal__okButton\" onClick={() => removeTodo(id)}>OK</button>\r\n                {console.log(id)}\r\n                <button className=\"confirmModal__cancelButton\" onClick={() => closeModal()}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useCallback, ReactNode, ChangeEvent, FormEvent} from 'react';\r\n\r\nimport './TodoList.scss';\r\nimport TodoItem from '../TodoItem/TodoItem';\r\nimport { TodoItemInterface } from '../../types';\r\nimport AddTodoPanel from '../AddTodoPanel/AddTodoPanel';\r\nimport SearchPanel from '../SearchPanel/SearchPanel';\r\nimport ConfirmModal from '../ConfirmModal/ConfirmModal';\r\n\r\nexport default function TodoList() {\r\n    const [todoList, setTodoList] = useState<TodoItemInterface[]>([])\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [searchInputValue, setSearchInputValue] = useState('');\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [currentTodoId, setCurrentTodoId] = useState<number>();\r\n\r\n    const removeTodo = (id: number) => setTodoList((prevState: TodoItemInterface[]): TodoItemInterface[] => {\r\n        const index = prevState.findIndex(todo => todo.id === id);\r\n        closeModal();\r\n        return [\r\n        ...prevState.slice(0, index),\r\n        ...prevState.slice(index + 1)\r\n        ]\r\n    })\r\n\r\n    const closeModal = () => {\r\n        setIsModalVisible(false)\r\n    }\r\n\r\n    const openModal = useCallback(() => {\r\n        setIsModalVisible(true)\r\n    }, [])\r\n\r\n    const passId = (id: number) => {\r\n        setCurrentTodoId(id)\r\n    }\r\n\r\n    const handleTodoClick = useCallback(\r\n        (id) => {\r\n            const currentTodo = todoList.find(todo => todo.id === id) as TodoItemInterface;\r\n            const index = todoList.findIndex(todo => todo.id === id);\r\n            currentTodo.isDone = !currentTodo.isDone\r\n            setTodoList((prevState: TodoItemInterface[]): TodoItemInterface[] => {\r\n                return [\r\n                    ...prevState.slice(0, index),\r\n                    currentTodo,\r\n                    ...prevState.slice(index + 1)\r\n                ]\r\n            })\r\n        },\r\n        [todoList]\r\n    )\r\n\r\n    const renderTodoList = useCallback (\r\n        (todos: TodoItemInterface[]): ReactNode => {\r\n            return todos.map((key: TodoItemInterface, index: number) => {\r\n                return (\r\n                    <TodoItem\r\n                        key={index}\r\n                        passId={passId}\r\n                        todo={key}\r\n                        handleTodoClick={handleTodoClick}\r\n                        openModal={openModal}\r\n                    />\r\n                )\r\n            })\r\n        },\r\n        [handleTodoClick, openModal]\r\n    )\r\n\r\n    const renderFilteredTodoList = useCallback(\r\n        () => {\r\n            const todos = todoList\r\n            const filtered = todos.filter(todo => todo.name.toLowerCase().includes(searchInputValue.toLowerCase()))\r\n            return renderTodoList(filtered)\r\n        },\r\n        [renderTodoList, todoList, searchInputValue]\r\n    )\r\n\r\n    const handleSubmit = useCallback(\r\n        () => {\r\n            setTodoList(\r\n                (prevState: TodoItemInterface[]): TodoItemInterface[] => [\r\n                    ...prevState,\r\n                    {\r\n                        id: new Date().valueOf(),\r\n                        name: inputValue,\r\n                        isDone: false\r\n                    }\r\n                ]\r\n            )\r\n            setInputValue('')\r\n        },\r\n        [inputValue],\r\n    )\r\n\r\n    const handleSearchInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n        const { value } = e.target as HTMLInputElement;\r\n        setSearchInputValue(value)\r\n    }\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n        const { value } = e.target as HTMLInputElement;\r\n        setInputValue(value)\r\n    }\r\n\r\n    const handleKeyUp = (e: FormEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n        const { value } = e.currentTarget as HTMLInputElement;\r\n        setInputValue(value)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className='todoList'>\r\n                <SearchPanel\r\n                    handleSearchInputChange={handleSearchInputChange}\r\n                    searchInputValue={searchInputValue}\r\n                    searchTodo={renderFilteredTodoList}\r\n                />\r\n                <div className='todoList__inner'>\r\n                    <div className=\"todoList__list\">\r\n                        {renderFilteredTodoList()}\r\n                    </div>\r\n                </div>\r\n                <div className=\"todoList__addTodo\">\r\n                    <AddTodoPanel\r\n                        handleKeyUp={handleKeyUp}\r\n                        inputValue={inputValue}\r\n                        handleSubmit={handleSubmit}\r\n                        handleChange={handleChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={isModalVisible ? \"todoList__confirmModal\" : \"todoList__confirmModal__hidden\"}>\r\n                <ConfirmModal\r\n                removeTodo={removeTodo}\r\n                closeModal={closeModal}\r\n                id={currentTodoId!}\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport './App.scss';\nimport TodoList from '../TodoList/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"app__wrapper\">\n        <h1>ToDo Application</h1>\n        <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-caveat'\n\nimport './index.css'\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}